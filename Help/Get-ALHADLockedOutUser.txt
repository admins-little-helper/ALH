
NAME
    Get-ALHADLockedOutUser
    
SYNOPSIS
    Function to query the securtiy event log for event id 4740 which is logged in case a user account gets locked out.
    
    
SYNTAX
    Get-ALHADLockedOutUser [-DomainName <String>] [-Identity <String[]>] [-ComputerName <String[]>] [-Credential <PSCredential>] [<CommonParameters>]
    
    Get-ALHADLockedOutUser [-DomainName <String>] [-Identity <String[]>] [-StartTime <DateTime>] [-ComputerName <String[]>] [-Credential <PSCredential>] [<CommonParameters>]
    
    Get-ALHADLockedOutUser [-DomainName <String>] [-Identity <String[]>] [-TimeRange <String>] [-ComputerName <String[]>] [-Credential <PSCredential>] [<CommonParameters>]
    
    
DESCRIPTION
    Function to query the securtiy event log for event id 4740 which is logged in case a user account gets locked out.
    The function can query one or multiple computers for one, multiple or any user in a given timeframe.
    This helps to identify the source of the invalid logon attemps because the events contain the source IP
    address of the logon attempt.
    

PARAMETERS
    -DomainName <String>
        The AD domain name in which the Domain Controller will be queried, if no value
        is specified for the -Compuername parameter.
        
        Required?                    false
        Position?                    named
        Default value                $env:USERDOMAIN
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Identity <String[]>
        One or more usernames (samAccountName) to search for. If ommited, events for all users ("*") are searched.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       true (ByValue)
        Accept wildcard characters?  false
        
    -StartTime <DateTime>
        The datetime to start searching from. If ommited, it's set for the last two hours.
        
        Required?                    false
        Position?                    named
        Default value                (Get-Date).AddHours(-2)
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -TimeRange <String>
        
        Required?                    false
        Position?                    named
        Default value                1d
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -ComputerName <String[]>
        One or more computernames to search for. If ommited, the script tries to get the domain controller
        with the PDC emulator role for the current domain or the domain specified with the -DomainName parameter.
        
        Required?                    false
        Position?                    named
        Default value                [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain((New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext('Domain', $DomainName))).PdcRoleOwner.Name
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Credential <PSCredential>
        Credentials used to query the event log. If ommited, the credentials of the user running the script are used.
        
        Required?                    false
        Position?                    named
        Default value                [System.Management.Automation.PSCredential]::Empty
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see
        about_CommonParameters (https://go.microsoft.com/fwlink/?LinkID=113216). 
    
INPUTS
    Nothing
    
    
OUTPUTS
    Nothing
    
    
NOTES
    
    
        Author:     Dieter Koch
        Email:      diko@admins-little-helper.de
    
    -------------------------- EXAMPLE 1 --------------------------
    
    PS > Get-ALHADFailedLogonAttemps
    Get events for all users in the last 2 hours from the domain ctonroller with the PDC emulator role.
    
    
    
    
    
    
    -------------------------- EXAMPLE 2 --------------------------
    
    PS > Get-ALHADFailedLogonAttemps -Identity 'mike' -StartTime (Get-Date).AddHours(-8)
    Get events for user with samAccountName 'mike' within the last 8 hours.
    
    
    
    
    
    
    -------------------------- EXAMPLE 3 --------------------------
    
    PS > Get-ALHADFailedLogonAttemps -StartTime (Get-Date).AddDays(-1) -ComputerName dc1,dc2
    Get events for any user within last 24 hours from a computers (Domain Controller) dc1 and dc2.
    
    
    
    
    
    
    -------------------------- EXAMPLE 4 --------------------------
    
    PS > Get-ALHADFailedLogonAttemps -Identity 'user1','user2' -StartTime (Get-Date).AddDays(-1)
    Get events for two users within the last 24 hours from Domain Controller running the PDC role.
    
    
    
    
    
    
    -------------------------- EXAMPLE 5 --------------------------
    
    PS > Get-Content -Path C:\Temp\Userlist.txt | Get-ALHADFailedLogonAttemps -StartTime (Get-Date).AddDays(-1)
    Get events for users from pipeline input within the last 24 hours from Domain Controller running the PDC role.
    
    
    
    
    
    
    
RELATED LINKS
    https://github.com/admins-little-helper/ALH/blob/main/Help/Get-ALHADLockedOutUser.txt


